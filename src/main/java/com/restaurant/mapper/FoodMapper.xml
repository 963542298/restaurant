<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.restaurant.mapper.FoodMapper" >
  <resultMap id="BaseResultMap" type="com.restaurant.entity.Food" >
    <id column="foodId" property="foodid" jdbcType="INTEGER" />
    <result column="foodName" property="foodname" jdbcType="VARCHAR" />
    <result column="foodPath" property="foodpath" jdbcType="VARCHAR" />
    <result column="typeId" property="typeid" jdbcType="INTEGER" />
    <result column="foodState" property="foodstate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    foodId, foodName, foodPath, typeId, foodState
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.restaurant.entity.FoodExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from food
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from food
    where foodId = #{foodid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from food
    where foodId = #{foodid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.restaurant.entity.FoodExample" >
    delete from food
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.restaurant.entity.Food" >
    insert into food (foodId, foodName, foodPath, 
      typeId, foodState)
    values (#{foodid,jdbcType=INTEGER}, #{foodname,jdbcType=VARCHAR}, #{foodpath,jdbcType=VARCHAR}, 
      #{typeid,jdbcType=INTEGER}, #{foodstate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.restaurant.entity.Food" >
    insert into food
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="foodid != null" >
        foodId,
      </if>
      <if test="foodname != null" >
        foodName,
      </if>
      <if test="foodpath != null" >
        foodPath,
      </if>
      <if test="typeid != null" >
        typeId,
      </if>
      <if test="foodstate != null" >
        foodState,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="foodid != null" >
        #{foodid,jdbcType=INTEGER},
      </if>
      <if test="foodname != null" >
        #{foodname,jdbcType=VARCHAR},
      </if>
      <if test="foodpath != null" >
        #{foodpath,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="foodstate != null" >
        #{foodstate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.restaurant.entity.FoodExample" resultType="java.lang.Integer" >
    select count(*) from food
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update food
    <set >
      <if test="record.foodid != null" >
        foodId = #{record.foodid,jdbcType=INTEGER},
      </if>
      <if test="record.foodname != null" >
        foodName = #{record.foodname,jdbcType=VARCHAR},
      </if>
      <if test="record.foodpath != null" >
        foodPath = #{record.foodpath,jdbcType=VARCHAR},
      </if>
      <if test="record.typeid != null" >
        typeId = #{record.typeid,jdbcType=INTEGER},
      </if>
      <if test="record.foodstate != null" >
        foodState = #{record.foodstate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update food
    set foodId = #{record.foodid,jdbcType=INTEGER},
      foodName = #{record.foodname,jdbcType=VARCHAR},
      foodPath = #{record.foodpath,jdbcType=VARCHAR},
      typeId = #{record.typeid,jdbcType=INTEGER},
      foodState = #{record.foodstate,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.restaurant.entity.Food" >
    update food
    <set >
      <if test="foodname != null" >
        foodName = #{foodname,jdbcType=VARCHAR},
      </if>
      <if test="foodpath != null" >
        foodPath = #{foodpath,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        typeId = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="foodstate != null" >
        foodState = #{foodstate,jdbcType=INTEGER},
      </if>
    </set>
    where foodId = #{foodid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.restaurant.entity.Food" >
    update food
    set foodName = #{foodname,jdbcType=VARCHAR},
      foodPath = #{foodpath,jdbcType=VARCHAR},
      typeId = #{typeid,jdbcType=INTEGER},
      foodState = #{foodstate,jdbcType=INTEGER}
    where foodId = #{foodid,jdbcType=INTEGER}
  </update>
</mapper>